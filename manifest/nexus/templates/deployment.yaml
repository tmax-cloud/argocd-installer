apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nexus.fullname" . }}
  namespace: nexus
  labels:
{{ include "nexus.labels" . | indent 4 }}
  {{- if .Values.nexus.extraLabels }}
    {{- with .Values.nexus.extraLabels }}
      {{ toYaml . | indent 4 }}
    {{- end }}
  {{- end }}
{{- if .Values.deployment.annotations }}
  annotations:
    {{ toYaml .Values.deployment.annotations | nindent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: {{ .Values.deploymentStrategy }}
  selector:
    matchLabels:
      {{- include "nexus.selectorLabels" . | nindent 6 }}
      {{- if .Values.nexus.extraSelectorLabels }}
        {{- with .Values.nexus.extraSelectorLabels }}
          {{ toYaml . | indent 6 }}
        {{- end }}
      {{- end }}      
  template:
    metadata:
      annotations:
        checksum/configmap-properties: {{ include (print .Template.BasePath "/configmap-properties.yaml") $ | sha256sum }}
        {{- if .Values.nexus.podAnnotations }}
          {{ toYaml .Values.nexus.podAnnotations | nindent 8}}
        {{- end }}
      labels:
        {{- include "nexus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "nexus.serviceAccountName" . }}
      initContainers:
        - name: set-logger-level
          image: busybox
          imagePullPolicy: IfNotPresent
          securityContext:
              runAsUser: 0
          command:
            - /bin/sh
            - -c
            - -x
            - |
              mkdir -p /opt/sonatype/nexus/etc/logback
              cat <<EOY > /opt/sonatype/nexus/etc/logback/logback.xml
              <?xml version="1.0" encoding="UTF-8"?>
              <configuration>
                <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
                  <resetJUL>true</resetJUL>
                </contextListener>

                <jmxConfigurator/>

                <appender name="osgi" class="org.ops4j.pax.logging.logback.internal.bridges.PaxAppenderDelegate">
                  <filter class="org.sonatype.nexus.pax.logging.NexusLogFilter" />
                </appender>

                <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
                  <filter class="org.sonatype.nexus.pax.logging.NexusLogFilter" />
                  <encoder>
                    <pattern>%d{"yyyy-MM-dd HH:mm:ss,SSSZ"} %-5p [%thread] %mdc{userId:-*SYSTEM} %c - %m%n</pattern>
                  </encoder>
                </appender>

                <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
                  <File>\${karaf.data}/log/nexus.log</File>
                  <Append>true</Append>
                  <encoder class="org.sonatype.nexus.pax.logging.NexusLayoutEncoder">
                    <pattern>%d{"yyyy-MM-dd HH:mm:ss,SSSZ"} %-5p [%thread] %node %mdc{userId:-*SYSTEM} %c - %m%n</pattern>
                  </encoder>
                  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>\${karaf.data}/log/nexus-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
                    <maxHistory>90</maxHistory>
                  </rollingPolicy>
                  <filter class="org.sonatype.nexus.pax.logging.NexusLogFilter" />
                </appender>

                <appender name="clusterlogfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
                  <File>\${karaf.data}/log/nexus_cluster.log</File>
                  <Append>true</Append>
                  <encoder class="org.sonatype.nexus.pax.logging.NexusLayoutEncoder">
                    <pattern>%d{"yyyy-MM-dd HH:mm:ss,SSSZ"} %-5p [%thread] %node %mdc{userId:-*SYSTEM} %c - %m%n</pattern>
                  </encoder>
                  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>\${karaf.data}/log/nexus_cluster-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
                    <maxHistory>90</maxHistory>
                  </rollingPolicy>
                  <filter class="org.sonatype.nexus.pax.logging.ClusterLogFilter" />
                </appender>

                <appender name="tasklogfile" class="ch.qos.logback.classic.sift.SiftingAppender">
                  <filter class="org.sonatype.nexus.pax.logging.TaskLogsFilter" />
                  <discriminator>
                    <key>taskIdAndDate</key>
                    <defaultValue>unknown</defaultValue>
                  </discriminator>
                  <sift>
                    <appender name="taskAppender" class="ch.qos.logback.core.FileAppender">
                      <file>\${karaf.data}/log/tasks/\${taskIdAndDate}.log</file>
                      <encoder class="org.sonatype.nexus.pax.logging.NexusLayoutEncoder">
                        <pattern>%d{"yyyy-MM-dd HH:mm:ss,SSSZ"} %-5p [%thread] %node %mdc{userId:-*SYSTEM} %c - %m%n</pattern>
                      </encoder>
                    </appender>
                  </sift>
                </appender>

                <appender name="auditlogfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
                  <File>\${karaf.data}/log/audit/audit.log</File>
                  <Append>true</Append>
                  <encoder>
                    <pattern>%msg%n</pattern>
                  </encoder>
                  <filter class="org.sonatype.nexus.pax.logging.AuditLogFilter"/>
                  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>\${karaf.data}/log/audit/audit-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
                    <maxHistory>90</maxHistory>
                  </rollingPolicy>
                </appender>

                <logger name="auditlog" additivity="false">
                  <appender-ref ref="auditlogfile"/>
                </logger>

                <appender name="blobstore-reconciliation-log-file" class="ch.qos.logback.classic.sift.SiftingAppender">
                  <discriminator>
                    <key>blobstore-reconciliation-path</key>
                    <defaultValue>unknown</defaultValue>
                  </discriminator>
                  <sift>
                    <appender name="FILE-\${blobstore}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                        <Pattern>%d{"yyyy-MM-dd HH:mm:ss"},%msg%n</Pattern>
                      </encoder>
                      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                        <fileNamePattern>\${blobstore-reconciliation-path}/%d</fileNamePattern>
                        <maxHistory>90</maxHistory>
                      </rollingPolicy>
                    </appender>
                  </sift>
                </appender>
                <logger name="blobstore-reconciliation-log" additivity="false">
                  <appender-ref ref="blobstore-reconciliation-log-file"/>
                </logger>

                <appender name="metrics" class="org.sonatype.nexus.pax.logging.InstrumentedAppender"/>

                <logger name="org.eclipse.jetty.webapp" level="INFO"/>
                <logger name="org.eclipse.jetty.webapp.StandardDescriptorProcessor" level="WARN"/>

                <logger name="org.apache.aries" level="WARN"/>
                <logger name="org.apache.felix" level="WARN"/>
                <logger name="org.apache.karaf" level="WARN"/>

                <include file="\${karaf.data}/etc/logback/logback-tasklogfile-appender-override.xml" optional="true"/>

                <root level="\${root.level:-{{ .Values.global.logLevel }}}">
                  <appender-ref ref="osgi"/>
                  <appender-ref ref="console"/>
                  <appender-ref ref="logfile"/>
                  <appender-ref ref="clusterlogfile"/>
                  <appender-ref ref="tasklogfile"/>
                  <appender-ref ref="metrics"/>
                </root>
              </configuration>
              EOY

              cat <<EOY > /opt/sonatype/nexus/etc/logback/logback-access.xml
              <?xml version="1.0"?>
              <configuration>
                <appender name="request.logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
                  <File>\${karaf.data}/log/request.log</File>
                  <Append>true</Append>
                  <encoder class="org.sonatype.nexus.pax.logging.AccessPatternLayoutEncoder">
                    <pattern>%clientHost %l %user [%date] "%requestURL" %statusCode %header{Content-Length} %bytesSent %elapsedTime "%header{User-Agent}" [%thread]</pattern>
                  </encoder>
                  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>\${karaf.data}/log/request-%d{yyyy-MM-dd}.log.gz</fileNamePattern>
                    <maxHistory>90</maxHistory>
                  </rollingPolicy>
                </appender>

                <appender-ref ref="request.logfile"/>
              </configuration>
          volumeMounts:
            - name: opt-sonatype-nexus-etc-logback
              mountPath: /opt/sonatype/nexus/etc/logback
      {{- if .Values.nexus.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nexus.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.nexus.hostAliases }}
      hostAliases:
        {{ toYaml .Values.nexus.hostAliases | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.global.registry.is_offline }}
          image: "{{ .Values.global.registry.private_registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
            runAsUser: 0
          lifecycle:
          {{- if .Values.deployment.postStart.command }}
            postStart:
              exec:
                command: {{ .Values.deployment.postStart.command }}
          {{- end }}
          env:
            {{ toYaml .Values.nexus.env | nindent 12 }}
          envFrom:
            {{ toYaml .Values.nexus.envFrom | nindent 12 }}
          resources:
            {{ toYaml .Values.nexus.resources | nindent 12 }}
          ports:
            - name: nexus-ui
              containerPort: {{ .Values.nexus.nexusPort }}
            {{- if .Values.nexus.docker.enabled }}
            {{- range .Values.nexus.docker.registries }}
            - name: docker-{{ .port }}
              containerPort: {{ .port }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.nexus.livenessProbe.path }}
              port: {{ .Values.nexus.nexusPort }}
            initialDelaySeconds: {{ .Values.nexus.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.nexus.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.nexus.livenessProbe.failureThreshold }}
            {{- if .Values.nexus.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.nexus.livenessProbe.timeoutSeconds }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.nexus.readinessProbe.path }}
              port: {{ .Values.nexus.nexusPort }}
            initialDelaySeconds: {{ .Values.nexus.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.nexus.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.nexus.readinessProbe.failureThreshold }}
            {{- if .Values.nexus.readinessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.nexus.readinessProbe.timeoutSeconds }}
            {{- end }}
          volumeMounts:
            {{- if ne .Values.global.timezone "UTC" }}
            - name: timezone-config
              mountPath: /etc/localtime
            {{- end }}
            - mountPath: /nexus-data	
              name: {{ template "nexus.name" . }}-data
            {{- if .Values.config.enabled }}
            - mountPath: {{ .Values.config.mountPath }}
              name: {{ template "nexus.name" . }}-conf
            {{- end }}
            {{- if .Values.nexus.properties.override }}
            - mountPath: /nexus-data/etc/nexus.properties
              name: {{ template "nexus.name" . }}-properties
              subPath: nexus.properties
            {{- end }}
            {{- if .Values.secret.enabled }}
            - mountPath: {{ .Values.secret.mountPath }}
              name: {{ template "nexus.name" . }}-secret
              readOnly: {{ .Values.secret.readOnly }}
            {{- end }}
            {{- if .Values.deployment.additionalVolumeMounts}}
              {{ toYaml .Values.deployment.additionalVolumeMounts | nindent 12 }}
            {{- end }}
        {{- if .Values.deployment.additionalContainers }}
          {{ toYaml .Values.deployment.additionalContainers | nindent 8 }}
        {{- end }}
      {{- if .Values.nexus.securityContext }}
      securityContext:
        {{ toYaml .Values.nexus.securityContext | nindent 8 }}
      {{- end }}
      volumes:
        {{- if ne .Values.global.timezone "UTC" }}
        - name: timezone-config
          hostPath:
            path: {{ printf "%s%s" "/usr/share/zoneinfo/" .Values.global.timezone }}
        {{- end }}
        - name: {{ template "nexus.name" . }}-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" (include "nexus.fullname" .) "data") }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.config.enabled }}
        - name: {{ template "nexus.name" . }}-conf
          configMap:
            name: {{ template "nexus.name" . }}-conf
        {{- end }}
        {{- if .Values.nexus.properties.override }}
        - name: {{ template "nexus.name" . }}-properties
          configMap:
            name: {{ template "nexus.name" . }}-properties
            items:
            - key: nexus.properties
              path: nexus.properties
        {{- end }}
        {{- if .Values.secret.enabled }}
        - name: {{ template "nexus.name" . }}-secret
          secret:
            secretName: {{ template "nexus.name" . }}-secret
        {{- end }}
        {{- if .Values.deployment.additionalVolumes }}
          {{ toYaml .Values.deployment.additionalVolumes | nindent 8 }}
        {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
    {{- end }}
