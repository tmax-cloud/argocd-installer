{{ if .Values.modules.hyperCloud.enabled }}
{{ $isMaster := eq .Values.global.cluster "master" }}
{{ $prefix := printf "%s-%s" .Values.global.clusterNamespace .Values.global.clusterName }}
{{ $module := "hypercloud" }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    cluster: {{ ternary "master" $prefix $isMaster }}
  name: {{ ternary $module (printf "%s-%s" $prefix $module) $isMaster }}
  namespace: argocd
spec:
  destination:
    name: {{ .Values.global.clusterName }}
    namespace: hypercloud5-system
  project: {{ .Values.spec.project }}
  source:
    helm:
      parameters:
      # global
      - name: global.offline.enabled
        value: "{{ .Values.global.network.disabled }}"
      - name: global.offline.registry
        value: "{{ .Values.global.privateRegistry }}"
      - name: global.hpcdMode
        value: "{{ .Values.modules.hyperCloud.mode }}"
      - name: global.hyperAuth.url
        value: {{ include "hyperAuth.domain" . }}
      - name: global.hyperAuth.clientSecret
        value: {{ include "hyperAuth.tmaxClientSecret" . }}
      - name: global.hyperAuth.subDomain
        value: {{ include "hyperAuth.subdomain" . }}
      - name: global.console.subDomain
        value: "{{ .Values.modules.gatewayBootstrap.console.subdomain }}"
      - name: global.timeZone
        value: "{{ .Values.global.timeZone }}"
      - name: global.domain
        value: "{{ .Values.global.domain }}"
      # hc-apiserver
      - name: apiServer.kubectl.timeout
        value: "{{ .Values.modules.hyperCloud.kubectl.timeout }}"
      - name: apiServer.kafka.enabled
        value: "{{ .Values.modules.hyperCloud.kafka.enabled }}"
      - name: apiServer.logLevel
        value: "{{ .Values.modules.hyperCloud.apiServer.logLevel }}"
      # hc-multi-operator
      - name: multiOperator.aws.enabled
        value: "{{ .Values.modules.capi.providers.aws.enabled }}"
      - name: multiOperator.vsphere.enabled
        value: "{{ .Values.modules.capi.providers.vsphere.enabled }}"
      - name: multiOperator.logLevel
        value: "{{ .Values.modules.hyperCloud.multiOperator.logLevel }}"
      # hc-single-operator
      - name: singleOperator.logLevel
        value: "{{ .Values.modules.hyperCloud.singleOperator.logLevel }}"
      # timescaledb
      - name: timescaleDB.logLevel
        value: "{{ .Values.modules.hyperCloud.timescaledb.logLevel }}"
      - name: timescaleDB.storageClass
        value: "{{ .Values.modules.hyperCloud.storageClass }}"
      - name: timescaleDB.audit.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.audit.chunk }}"
      - name: timescaleDB.audit.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.audit.retention }}"
      - name: timescaleDB.event.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.event.chunk }}"
      - name: timescaleDB.event.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.event.retention }}"
      - name: timescaleDB.metering.hour.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_hour.chunk }}"
      - name: timescaleDB.metering.hour.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_hour.retention }}"
      - name: timescaleDB.metering.day.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_day.chunk }}"
      - name: timescaleDB.metering.day.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_day.retention }}"
      - name: timescaleDB.metering.month.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_month.chunk }}"
      - name: timescaleDB.metering.month.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_month.retention }}"
      - name: timescaleDB.metering.year.chunkTimeInterval
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_year.chunk }}"
      - name: timescaleDB.metering.year.retentionPolicy
        value: "{{ .Values.modules.hyperCloud.timescaledb.metering_year.retention }}"
    path: manifest/hypercloud
    repoURL: {{ .Values.spec.source.repoURL }}
    targetRevision: {{ .Values.spec.source.targetRevision }}
{{ end }}