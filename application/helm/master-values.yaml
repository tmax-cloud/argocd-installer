spec:
  destination:
    type: server
    clusterInfo: https://kubernetes.default.svc
  project: default

global:
  # 기본시나리오에서는 privateRegistry값만 변경해주면 된다
  # e.x) 172.22.6.2:5000 or hyperregistry.domain.com
  privateRegistry: test-registry.com
  # 값 변경 필요 없음
  adminUser: test@test.co.kr
  cluster: master
  clusterName: in-cluster
  clusterNamespace: default

modules:
  ### gateway-bootstrap
  gatewayBootstrap:
    enabled: true
    # cloud provider의 load balancer 서비스(ex. aws nlb)를 사용하기 위해서는
    # LoadBalancer로 값을 변경
    svc_type: NodePort
    tls:
      selfsigned:
        enabled: false
      # acme로 할 경우, domain에 입력한 주소를 가지고 있어야함
      acme:
        enabled: false
        email: test@tmax.co.kr
        dns:
          type: route53
          accessKeyID: accesskey
          accessKeySecret: secretkey
          hostedZoneID: hostedzoneid
        environment: production
    certManager:
      enabled: true
      # default 300
      syncWaitTime: 300
    console:
      enabled: true
      multiCluster:
        enabled: true
      # default 0
      syncWaitTime: 0
      subdomain: console
    gateway:
      enabled: true
      # default 120
      syncWaitTime: 120
    jwtDecodeAuth:
      enabled: true
      # default 30
      syncWaitTime: 30
    monitoringIngressroute:
      enabled: false

  ### strimzi-kafka-operator
  strimziKafka:
    enabled: false

  ### hyperauth
  hyperAuth:
    enabled: true
    svcType: Ingress
    subdomain: hyperauth
    # default로 주는 경우 default storage class를 사용
    # default를 사용하지 않고 싶은 경우에는 storage class이름을 기입
    storageClass: default

  ### efk
  efk:
    enabled: false
    es:
      version: 7.2.1
      limitMemory: 8Gi
      requestMemory: 5Gi
      jvmHeap: "-Xms4g -Xmx4g"
      volumeSize: 50Gi
    busyBox:
      version: 1.32.0
    kibana:
      version: 7.2.0
      svcType: ClusterIP
      subdomain: kibana
    gatekeeper:
      version: 10.0.0
    fluentd:
      version: v1.4.2-debian-elasticsearch-1.1
  
  ### opensearch
  opensearch:
    enabled: false
    os:
      version: 1.2.3
      limitMemory: 8Gi
      requestMemory: 5Gi
      jvmHeap: "-Xms4g -Xmx4g"
      volumeSize: 50Gi
    busyBox:
      version: 1.32.0
    dashboard:
      version: 1.2.0
      svcType: ClusterIP
      subdomain: opensearch-dashboard
    fluentd:
      version: fluentd-v1.4.2-debian-elasticsearch-1.1
      # default로 주는 경우 default storage class를 사용
      # default를 사용하지 않고 싶은 경우에는 storage class이름을 기입
      storageClass: default

  ### prometheus
  prometheus:
    enabled: true
    versions:
      prometheus: v2.30.3
      cmReload: v0.0.1
      cmReloader: v0.51.2
      operator: v0.51.2
      alertManager: v0.23.0
      kubeRbacProxy: v0.11.0
      kubeStateMetrics: v2.2.3
      nodeExporter: v1.2.2
      adapter: v0.9.1
    pvcSize: 10Gi

  ### grafana-operator
  grafana-operator:
    enabled: true
    pvcSize: 10Gi
    version: v0.0.2
    imageRepo: tmaxcloudck/grafana-operator
    subdomain: grafana

  ### service-mesh
  serviceMesh:
    ### istio
    istio:
      enabled: false

    ### jaeger
    jaeger:
      enabled: false
      subdomain: jaeger

    ### kiali
    kiali:
      enabled: false
      subdomain: kiali

  ### cluster-api
  capi:
    enabled: true
    providers:
      aws:
        enabled: false
        # description: ...
        credentials: "credential"
      vsphere:
        enabled: false
        credentials: 
          username: "user"
          password: "password"
  
  ### template service broker
  tsb:
    enabled: false
    version: 0.1.4
    clusterTsb:
      version: 0.1.4
    templateOperator:
      version: 0.2.7

  ### catalog controller
  catalogController:
    enabled: false

  ### hypercloud
  hyperCloud:
    enabled: true
    # description: 'single' or 'multi'
    mode: multi
    kafka:
      enabled: false
    # default로 주는 경우 default storage class를 사용
    # default를 사용하지 않고 싶은 경우에는 storage class이름을 기입
    storageClass: default

  ### hyperregistry
  # single cluster 설치용 변수
  # enabled: true로 변경 X
  hyperregistry:
    enabled: false
    core:
      subdomain: hyperregistry
    notary:
      subdomain: hyperregistry-notary
    storageClass: nfs
    storageClassDatabase: nfs

  ### tekton pipeline
  tektonPipeline:
    enabled: false
    #namespace: tekton-pipelines

  ### tekton trigger
  tektonTrigger:
    enabled: false

  ### cicd operator
  cicd:
    enabled: false
    subdomain: cicd-webhook

  ### redis-operator
  redis:
    enabled: false

  ### image validating webhook
  imageValidatingWebhook:
    enabled: true

  ### ai-devops
  aiDevops:
    enabled: false
    namespace: "kubeflow"
    knativeNamespace: "knative-serving"
    notebookSvcType: "Ingress"
  job:
      imagePullSecrets: []
#      imagePullSecrets:
#        - name: regcred
